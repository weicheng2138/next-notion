import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "@/app/globals.css";
import { i18n, type Locale } from "@/i18n-config";
import { getDictionary } from "@/lib/locale";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Notion Blog",
//   description: "Generated by create next app",
// };
type Props = {
  params: { lang: Locale };
  children?: React.ReactNode;
};
export async function generateMetadata({ params }: Props) {
  const dictionary = await getDictionary(params.lang);
  return {
    title: dictionary["server-component"].title,
    description: "Generated by create next app",
  };
}

export async function generateStaticParams() {
  return i18n.locales.map((locale) => ({ lang: locale }));
}

export default function RootLayout({ children, params }: Readonly<Props>) {
  return (
    <html lang={params.lang}>
      <body className={inter.className}>{children}</body>
    </html>
  );
}
